------------ Aula 9 - Juntando tabelas e consultas -----------



-----------------------  Consultas com Having ------------------------------------------------------------------

SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] 
WHERE [ESTADO]  = 'SP' 
GROUP BY BAIRRO, ESTADO




SELECT BAIRRO, ESTADO, SUM([LIMITE DE CREDITO]) AS 'SOMA DE LIMITES DE CREDITO' FROM [TABELA DE CLIENTES] 
WHERE [ESTADO]  = 'SP' 
GROUP BY BAIRRO, ESTADO
HAVING SUM([LIMITE DE CREDITO])>= 140000




SELECT * FROM [dbo].[TABELA DE CLIENTES]


SELECT ESTADO, SUM([LIMITE DE CREDITO]) 'SOMA LIMITE DE CREDITO' FROM [TABELA DE CLIENTES] 
GROUP BY ESTADO



SELECT ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] 
GROUP BY ESTADO 
HAVING SUM([LIMITE DE CREDITO]) >= 850000



SELECT EMBALAGEM, SUM([PRECO DE LISTA]), MAX([PRECO DE LISTA]), MIN([PRECO DE LISTA]) 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM

SELECT EMBALAGEM, SUM([PRECO DE LISTA]) AS 'SOMA PREÇO', MAX([PRECO DE LISTA]) AS 'MAIOR PREÇO', MIN([PRECO DE LISTA]) AS 'MENOR PRECO' 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM



SELECT EMBALAGEM, SUM([PRECO DE LISTA]) AS 'SOMA PREÇO', MAX([PRECO DE LISTA]) AS 'MAIOR PREÇO', MIN([PRECO DE LISTA]) AS 'MENOR PRECO' 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM
HAVING  SUM([PRECO DE LISTA])<=80


SELECT EMBALAGEM, SUM([PRECO DE LISTA]) AS 'SOMA PREÇO', MAX([PRECO DE LISTA]) AS 'MAIOR PREÇO', MIN([PRECO DE LISTA]) AS 'MENOR PRECO' 
FROM [TABELA DE PRODUTOS] 
GROUP BY EMBALAGEM
HAVING SUM([PRECO DE LISTA]) <= 80 AND MAX([PRECO DE LISTA]) >= 6


---------------------- DESAFIO 1 AULA 09 ----------------------------------------------------

SELECT CPF, COUNT(*) AS 'QTD. DE COMPRAS' FROM  [TABELA DE NOTAS FISCAIS]
WHERE YEAR(DATA) = 2016 
GROUP BY CPF 
HAVING COUNT(*) > 2000

-- 3 CLIENTES

--------------------------------------- USANDO O CASE PARA CLASSIFICAR RESULTADOS ----------------------------------------



SELECT * FROM [TABELA DE PRODUTOS]

----------------------------------------------------------

SELECT [NOME DO PRODUTO],
	CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
	END
FROM [TABELA DE PRODUTOS]

-------------------------------------------------------

SELECT [NOME DO PRODUTO],
	CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
	END AS 'CLASSIFICÃO DO PRODUTO'
FROM [TABELA DE PRODUTOS]

---------------------------------------------------------

SELECT [NOME DO PRODUTO],[PRECO DE LISTA],
	CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
	END AS 'CLASSIFICÃO DO PRODUTO'
FROM [TABELA DE PRODUTOS]

----------------------------------------------

SELECT [NOME DO PRODUTO],[PRECO DE LISTA],
	CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
	END AS 'CLASSIFICÃO DO PRODUTO'
FROM [TABELA DE PRODUTOS]
ORDER BY [PRECO DE LISTA]

-----------------------------------

SELECT [NOME DO PRODUTO],
		CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
		END, AVG([PRECO DE LISTA])

FROM [TABELA DE PRODUTOS]

GROUP BY 
[NOME DO PRODUTO],
CASE 
	WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
	WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' 
END

-------------------------------------------------------

SELECT [NOME DO PRODUTO],
		CASE 
		WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
		WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
		ELSE 'PRODUTO BARATO' 
		END AS 'CLASSIFICAÇÃO DO PRODUTO', AVG([PRECO DE LISTA]) AS 'MÉDIA'

FROM [TABELA DE PRODUTOS]

GROUP BY 
[NOME DO PRODUTO],
CASE 
	WHEN [PRECO DE LISTA] >= 12 THEN 'PRODUTO CARO'
	WHEN [PRECO DE LISTA] >= 7 AND [PRECO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
	ELSE 'PRODUTO BARATO' 
END 

------------------------------------------------------------

SELECT * FROM [TABELA DE NOTAS FISCAIS]


SELECT COUNT (*) FROM [TABELA DE NOTAS FISCAIS]


SELECT [DATA], COUNT (*) AS 'CONTAGEM' FROM [TABELA DE NOTAS FISCAIS]
GROUP BY [DATA]


SELECT YEAR(DATA) AS 'ANO', COUNT(*) AS 'CONTAGEM' FROM [TABELA DE NOTAS FISCAIS]
GROUP BY YEAR(DATA)

--------------------------------------------------------------

-------------------- DESAFIO 2 DA AULA 09 ----------------------------------------------

SELECT [NOME],
	CASE 
		WHEN YEAR([DATA DE NASCIMENTO]) < 1990 THEN 'Adulto'
		WHEN year([DATA DE NASCIMENTO]) between 1990 and 1995 then 'Jovem'
		ELSE 'Criança' 
	END AS 'CLASSIFICAÇÃO ETÁRIA'
FROM [TABELA DE CLIENTES]
 ----------------------------------------------------------

 ------------------INNER JOIN-----------------------------------------------


SELECT * FROM [TABELA DE VENDEDORES]


SELECT * FROM [TABELA DE NOTAS FISCAIS]


SELECT * FROM [TABELA DE VENDEDORES] 
INNER JOIN  [TABELA DE NOTAS FISCAIS]
ON [TABELA DE VENDEDORES].MATRICULA = [TABELA DE NOTAS FISCAIS].MATRICULA


SELECT * FROM [TABELA DE VENDEDORES] A
INNER JOIN [TABELA DE NOTAS FISCAIS] B 
ON A.MATRICULA = B.MATRICULA

 




SELECT [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], COUNT(*) AS 'NOTA FISCAL POR VENDEDOR' FROM [TABELA DE VENDEDORES] 
INNER JOIN [TABELA DE NOTAS FISCAIS] 
ON [TABELA DE VENDEDORES].MATRICULA = [TABELA DE NOTAS FISCAIS].MATRICULA
GROUP BY [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME]


SELECT [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], COUNT(*) AS 'NOTA FISCAL POR VENDEDOR' FROM [TABELA DE VENDEDORES] 
INNER JOIN [TABELA DE NOTAS FISCAIS] 
ON [TABELA DE VENDEDORES].MATRICULA = [TABELA DE NOTAS FISCAIS].MATRICULA
GROUP BY [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME]
ORDER BY  COUNT(*)


SELECT [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], YEAR(DATA) AS 'DATA', 
COUNT(*) AS 'NOTA FISCAL POR VENDEDOR' FROM [TABELA DE VENDEDORES] INNER JOIN 
[TABELA DE NOTAS FISCAIS] ON [TABELA DE VENDEDORES].MATRICULA = [TABELA DE NOTAS FISCAIS].MATRICULA
GROUP BY [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], YEAR(DATA)


SELECT [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], YEAR(DATA) AS 'DATA', 
COUNT(*) AS 'NOTA FISCAL POR VENDEDOR' FROM [TABELA DE VENDEDORES] INNER JOIN 
[TABELA DE NOTAS FISCAIS] ON [TABELA DE VENDEDORES].MATRICULA = [TABELA DE NOTAS FISCAIS].MATRICULA
GROUP BY [TABELA DE VENDEDORES].MATRICULA, [TABELA DE VENDEDORES].[NOME], YEAR(DATA)
ORDER BY YEAR(DATA)

-------------------- ------DESAFIO 03 DA AULA 09 ---------------------------------------


SELECT YEAR(DATA) AS 'ANO', SUM (QUANTIDADE * [PREÇO]) AS 'FATURAMENTO'
FROM [TABELA DE NOTAS FISCAIS] NF 
INNER JOIN [TABELA DE ITENS NOTAS FISCAIS] INF 
ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(DATA)

---------------------------- LEFT JOIN ----------------------------------------------



SELECT * FROM [TABELA DE CLIENTES] INNER JOIN 
[TABELA DE NOTAS FISCAIS] ON [TABELA DE CLIENTES].CPF = [TABELA DE NOTAS FISCAIS].CPF




SELECT [TABELA DE CLIENTES].[NOME], COUNT(*) AS 'QTD. DE NOTAS POR CLIENTE' FROM [TABELA DE CLIENTES] INNER JOIN 
[TABELA DE NOTAS FISCAIS]ON [TABELA DE CLIENTES].CPF = [TABELA DE NOTAS FISCAIS].CPF
GROUP BY [TABELA DE CLIENTES].[NOME]


SELECT * FROM [TABELA DE CLIENTES]




SELECT [TABELA DE CLIENTES].[NOME], COUNT(*) AS 'QTD. DE NOTAS POR CLIENTE' FROM [TABELA DE CLIENTES]
LEFT JOIN [TABELA DE NOTAS FISCAIS] 
ON [TABELA DE CLIENTES].CPF = [TABELA DE NOTAS FISCAIS].CPF
GROUP BY [TABELA DE CLIENTES].[NOME]



SELECT [TABELA DE CLIENTES].[CPF], [TABELA DE CLIENTES].[NOME], COUNT(*) FROM [TABELA DE CLIENTES]
LEFT JOIN [TABELA DE NOTAS FISCAIS]
ON [TABELA DE CLIENTES].CPF = [TABELA DE NOTAS FISCAIS].CPF
GROUP BY  [TABELA DE CLIENTES].[CPF], [TABELA DE CLIENTES].[NOME]


SELECT * FROM [TABELA DE NOTAS FISCAIS]
WHERE CPF = '95939180787'

-------------------------- UNION --------------------------------------------------------

SELECT DISTINCT BAIRRO AS 'BAIRRO CLIENTE' FROM [TABELA DE CLIENTES]

SELECT DISTINCT BAIRRO AS 'BAIRRO VENDEDORES' FROM [TABELA DE VENDEDORES]



SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE CLIENTES]
UNION 
SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO AS 'BAIRRO' FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO, [DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME FROM [TABELA DE VENDEDORES]


SELECT  BAIRRO, NOME FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME FROM [TABELA DE VENDEDORES]

--- um pouco de constantes ------
SELECT 'TESTE' AS 'COLUNA'

SELECT 1 AS 'TESTE'

SELECT 'TESTE' AS 'COLUNA', BAIRRO, NOME  FROM [TABELA DE CLIENTES]


SELECT BAIRRO, NOME, 'CLIENTE' AS 'CLIENTE/VENDEDOR' FROM [TABELA DE CLIENTES]
UNION ALL
SELECT  BAIRRO, NOME, 'VENDEDOR' FROM [TABELA DE VENDEDORES]
ORDER BY 3 DESC


------------- ----------SUBCONSULTAS ---------------------------------


SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]



SELECT BAIRRO FROM [TABELA DE VENDEDORES]



SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]
WHERE BAIRRO IN (SELECT BAIRRO FROM [TABELA DE VENDEDORES])



SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM



SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM
HAVING MAX([PRECO DE LISTA])<5


SELECT A.EMBALAGEM,A.[PRECO MAXIMO POR EMBALAGEM] FROM (SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' FROM [TABELA DE PRODUTOS]
GROUP BY EMBALAGEM) A 
WHERE A.[PRECO MAXIMO POR EMBALAGEM]<=5


--------------------------Visão------------------------------------------

-- criamos essa view pelo assitente 
SELECT * FROM [VW_EMBALAGEM]




--CRIACAO POR SQL
CREATE VIEW VW_TESTE AS 
		
	SELECT EMBALAGEM, MAX([PRECO DE LISTA]) AS 'PRECO MAXIMO POR EMBALAGEM' 
	FROM [TABELA DE PRODUTOS]
	GROUP BY EMBALAGEM

--SELECT NA VIEW TESTE
SELECT * FROM VW_TESTE
 	